http://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/#1-bar-chart



https://careydevelopment.us/2017/07/01/add-charts-spring-boot-app-highchart/


https://adminlte.io/
https://adminlte.io/themes/AdminLTE/index2.html

******
https://canvasjs.com/spring-mvc-charts/chart-index-data-label/


SPRING BOOT NO DOCKER:
https://emmanuelneri.com.br/2017/09/04/executando-aplicacoes-spring-boot-com-docker/




TAREFAS


Incluir status de CLIENTE OPUS ou POSSIVEL CLIENTE OPUS no cadastro do cliente.
OBS: Se incluir um seguro para o CPF ou CNPJ do cliente. Tb mudar o status do cliente para CLIENTE

Incluir tela para tipos de Seguros

Campos para Seguro:
- Cliente
- Tipo de Seguro
- Valor Segurado
- Percentual de Comissão na proposta
- Data da Proposta
- Data inicio Vigência
- Data fim Vigência
- Status 



DOCKER:

Cria banco de dados no docker
docker run -d --name opus-postgres -e POSTGRES_DB=opus -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=admin postgres:10.4







INSPECT NO CONTAINER DO BANCO:
docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)



Como criar um banco via docker:
https://rudibroekhuizen.wordpress.com/2017/02/03/connect-to-postgresql-database-using-ssh-tunnel-from-pgadmin4-running-in-docker-container/




CORRETO:
Criar banco de dados no docker
docker run -p 5050:5050 --name opus-postgres -e POSTGRES_DB=opus -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=admin nphung/pgadmin

Cria imagem do docker para a aplicação
mvn clean package dockerfile:build

Roda aplicação linkando com o banco do docker
docker run -it --link opus-postgres -p 8088:8088 alessandrosac84/opussolutions-app












EXEMPLOS DE MASCARAS NO FORM

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Formatacao de campos</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
&lt;script language="JavaScript" type="text/javascript" src="MascaraValidacao.js"></script> 
</head>
<body>
<form name="form1">
<br><br>CEP:
<input type="text" name="cep" onKeyPress="MascaraCep(form1.cep);"
 maxlength="10" onBlur="ValidaCep(form1.cep)">
<br><br>DATA:
<input type="text" name="data" onKeyPress="MascaraData(form1.data);"
 maxlength="10" onBlur= "ValidaDataform1.data);">
<br><br>Telefone: 
<input type="text" name="tel" onKeyPress="MascaraTelefone(form1.tel);" 
maxlength="14"  onBlur="ValidaTelefone(form1.tel);">
<br><br>CPF:
<input type="text" name="cpf" onBlur="ValidarCPF(form1.cpf);" 
onKeyPress="MascaraCPF(form1.cpf);" maxlength="14">
<br><br>CNPJ:
<input type="text" name="cnpj" onKeyPress="MascaraCNPJ(form1.cnpj);" 
maxlength="18" onBlur="ValidarCNPJ(form1.cnpj);">
</form>
</body>
</html>
